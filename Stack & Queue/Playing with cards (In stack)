import java.util.ArrayList;
import java.util.Scanner;
import java.util.Stack;

public class Main{

 	public static void main(String[] args) {
   
  	Scanner sc = new Scanner(System.in);
 	int num = sc.nextInt();
  	int query = sc.nextInt();
  	Stack<Integer> st = new Stack<>();
  	for (int i = 0; i < num; i++) {
   		st.push(sc.nextInt());
  	}
   
	Stack<Integer> stack1 = new Stack<>();
  	Stack<Integer> stack2 = new Stack<>();
  	ArrayList<Integer> primes = new ArrayList<>();
  	findprimenum(primes);

  	for (int i = 1; i <= query; i++) {
   		int prime = primes.get(i - 1);
   		while (!st.isEmpty()) {
    		int x = st.pop();
   		 	if (x % prime == 0) {
     			stack2.push(x);
    		} else {
     			stack1.push(x);
    		}
		}

   		while (!stack2.isEmpty()) {
    		System.out.println(stack2.pop());
		}
   		st = stack1;
   		stack1 = new Stack<>();
	}

  	while (!st.isEmpty()) {
   		System.out.println(st.pop());

  	}

 }

 

 public static void findprimenum(ArrayList<Integer> list) {
  	boolean[] isPrime = new boolean[100001];
  	isPrime[0] = true;
  	isPrime[1] = true;
  	for (int i = 2; i * i <= 100000; i++) {
   		if (isPrime[i] == false) {
    		list.add(i);
    		for (int mul = 2; mul * i <= 100000; mul++) {
    			isPrime[i * mul] = true;
    		}
   		}
  	}
  
  	for (int i = 2; i <= 100000; i++) {
   		if (!isPrime[i]) {
    		list.add(i);
   		}
  	}
 }

}
