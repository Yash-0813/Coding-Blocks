import java.util.*;
public class Main {
    public static void main (String args[]) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int[]price=new int[N];
        for(int i=0;i<N;i++){
            price[i]=sc.nextInt();
        }
        int len=sc.nextInt();

        System.out.println(cutRod(price,len));
    }

    public static int cutRod(int price[], int n) {
        //code here
        int[][] dp = new int[n+1][n+1];
        for(int[] a:dp){
            Arrays.fill(a,-1);
        }
        
        return maxcost(price,0,n,n,dp);
    }
    
    public static int maxcost(int[] price,int curr,int n,int len,int[][] dp){
        if(len<=0)
            return 0;
        
        if(curr>=n)
            return 0;
        
        if(dp[curr][len] != -1)
            return dp[curr][len];
            
        int cut = 0;
        
        if(len >= (curr+1)){
            cut = price[curr] + maxcost(price,curr,n,len-(curr+1),dp);
        }
        
        int nocut = maxcost(price,curr+1,n,len,dp);
        
        return dp[curr][len] = Math.max(cut,nocut);
        
    }
}
